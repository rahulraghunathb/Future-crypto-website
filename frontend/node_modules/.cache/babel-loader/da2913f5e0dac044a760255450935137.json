{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akhil\\\\OneDrive\\\\Desktop\\\\crypto-login\\\\crypto_frontend\\\\Future-crypto-website\\\\frontend\\\\src\\\\components\\\\AuthModal.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Modal from 'react-modal';\nimport { FaGoogle } from 'react-icons/fa';\nimport './authmodal.css';\nimport PasswordResetModal from './ForgotPassword';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root'); // For accessibility\n\nconst AuthModal = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    selectedForm\n  } = _ref;\n  const isLoginForm = selectedForm === 'login';\n  const [isPasswordResetModalOpen, setIsPasswordResetModalOpen] = useState(false);\n\n  const openPasswordResetModal = () => {\n    setIsPasswordResetModalOpen(true);\n  };\n\n  const closePasswordResetModal = () => {\n    setIsPasswordResetModalOpen(false);\n  };\n\n  const handlePasswordReset = () => {// Implement your password reset logic here\n    // This function will be called when the \"Reset Password\" button is clicked\n    // You can send a reset password email to the entered email address\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: \"modal_card\",\n    isOpen: isOpen,\n    onRequestClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      className: \"close-button\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        \"aria-hidden\": \"true\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"form-heading\",\n          children: [isLoginForm ? '' : '', \"Cryp\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"primary\",\n            children: \"to\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), isLoginForm ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"forgot-password\",\n              onClick: openPasswordResetModal,\n              children: \"Forgot password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 30\n            }, this) : null, isLoginForm ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"forgot-password\",\n              children: \"or\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 30\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"forgot-password\",\n              children: \"or\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 70\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(FaGoogle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 42\n              }, this), \" \", isLoginForm ? 'Sign in with Google' : 'Sign up with Google']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button_2\",\n              children: isLoginForm ? 'Login' : 'Register'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PasswordResetModal, {\n      isOpen: isPasswordResetModalOpen,\n      onClose: closePasswordResetModal,\n      onReset: handlePasswordReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthModal, \"lbqsVvNrsBclinz2HsUowZVK6kE=\");\n\n_c = AuthModal;\nexport default AuthModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"names":["React","Modal","FaGoogle","PasswordResetModal","setAppElement","AuthModal","isOpen","onClose","selectedForm","isLoginForm","isPasswordResetModalOpen","setIsPasswordResetModalOpen","useState","openPasswordResetModal","closePasswordResetModal","handlePasswordReset"],"sources":["C:/Users/akhil/OneDrive/Desktop/crypto-login/crypto_frontend/Future-crypto-website/frontend/src/components/AuthModal.js"],"sourcesContent":["import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport {FaGoogle} from 'react-icons/fa'\r\nimport './authmodal.css';\r\nimport PasswordResetModal from './ForgotPassword';\r\n\r\nModal.setAppElement('#root'); // For accessibility\r\n\r\nconst AuthModal = ({ isOpen, onClose, selectedForm }) => {\r\n  const isLoginForm = selectedForm === 'login';\r\n  const [isPasswordResetModalOpen, setIsPasswordResetModalOpen] = useState(false);\r\n\r\n  const openPasswordResetModal = () => {\r\n    setIsPasswordResetModalOpen(true);\r\n  };\r\n\r\n  const closePasswordResetModal = () => {\r\n    setIsPasswordResetModalOpen(false);\r\n  };\r\n\r\n  const handlePasswordReset = () => {\r\n    // Implement your password reset logic here\r\n    // This function will be called when the \"Reset Password\" button is clicked\r\n    // You can send a reset password email to the entered email address\r\n  };\r\n\r\n  return (\r\n    <Modal className='modal_card' isOpen={isOpen} onRequestClose={onClose}>\r\n      <button onClick={onClose} className=\"close-button\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n\r\n      <div className=\"form-container\">\r\n        <div className=\"form\">\r\n        <h3  className='form-heading'>{isLoginForm ? '' : ''}Cryp<span className='primary'>to</span></h3>\r\n          <form>\r\n            <div className=\"form-content\">\r\n              {/* {isLoginForm ?  : null} */}\r\n              <input type=\"email\" placeholder=\"Email\" />\r\n              <input type=\"password\" placeholder=\"Password\" />\r\n              {isLoginForm ? <p className=\"forgot-password\" onClick={openPasswordResetModal} >Forgot password?</p> : null}\r\n              {isLoginForm ? <p className=\"forgot-password\">or</p> : <p className=\"forgot-password\">or</p>}\r\n             <button className='button'> <FaGoogle/> {isLoginForm ? 'Sign in with Google':'Sign up with Google'}</button>\r\n              \r\n              <button className='button_2'>{isLoginForm ? 'Login' : 'Register'}</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <PasswordResetModal isOpen={isPasswordResetModalOpen} onClose={closePasswordResetModal} onReset={handlePasswordReset} />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AuthModal;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,OAAO,iBAAP;AACA,OAAOC,kBAAP,MAA+B,kBAA/B;;AAEAF,KAAK,CAACG,aAAN,CAAoB,OAApB,E,CAA8B;;AAE9B,MAAMC,SAAS,GAAG,QAAuC;EAAA;;EAAA,IAAtC;IAAEC,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,CAAsC;EACvD,MAAMC,WAAW,GAAGD,YAAY,KAAK,OAArC;EACA,MAAM,CAACE,wBAAD,EAA2BC,2BAA3B,IAA0DC,QAAQ,CAAC,KAAD,CAAxE;;EAEA,MAAMC,sBAAsB,GAAG,MAAM;IACnCF,2BAA2B,CAAC,IAAD,CAA3B;EACD,CAFD;;EAIA,MAAMG,uBAAuB,GAAG,MAAM;IACpCH,2BAA2B,CAAC,KAAD,CAA3B;EACD,CAFD;;EAIA,MAAMI,mBAAmB,GAAG,MAAM,CAChC;IACA;IACA;EACD,CAJD;;EAMA,oBACE,QAAC,KAAD;IAAO,SAAS,EAAC,YAAjB;IAA8B,MAAM,EAAET,MAAtC;IAA8C,cAAc,EAAEC,OAA9D;IAAA,wBACE;MAAQ,OAAO,EAAEA,OAAjB;MAA0B,SAAS,EAAC,cAApC;MAAA,uBACE;QAAM,eAAY,MAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAK,SAAS,EAAC,gBAAf;MAAA,uBACE;QAAK,SAAS,EAAC,MAAf;QAAA,wBACA;UAAK,SAAS,EAAC,cAAf;UAAA,WAA+BE,WAAW,GAAG,EAAH,GAAQ,EAAlD,uBAAyD;YAAM,SAAS,EAAC,SAAhB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAzD;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eAEE;UAAA,uBACE;YAAK,SAAS,EAAC,cAAf;YAAA,wBAEE;cAAO,IAAI,EAAC,OAAZ;cAAoB,WAAW,EAAC;YAAhC;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE;cAAO,IAAI,EAAC,UAAZ;cAAuB,WAAW,EAAC;YAAnC;cAAA;cAAA;cAAA;YAAA,QAHF,EAIGA,WAAW,gBAAG;cAAG,SAAS,EAAC,iBAAb;cAA+B,OAAO,EAAEI,sBAAxC;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAH,GAA2F,IAJzG,EAKGJ,WAAW,gBAAG;cAAG,SAAS,EAAC,iBAAb;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAH,gBAA2C;cAAG,SAAS,EAAC,iBAAb;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QALzD,eAMC;cAAQ,SAAS,EAAC,QAAlB;cAAA,6BAA4B,QAAC,QAAD;gBAAA;gBAAA;gBAAA;cAAA,QAA5B,OAAyCA,WAAW,GAAG,qBAAH,GAAyB,qBAA7E;YAAA;cAAA;cAAA;cAAA;YAAA,QAND,eAQE;cAAQ,SAAS,EAAC,UAAlB;cAAA,UAA8BA,WAAW,GAAG,OAAH,GAAa;YAAtD;cAAA;cAAA;cAAA;YAAA,QARF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QALF,eAsBE,QAAC,kBAAD;MAAoB,MAAM,EAAEC,wBAA5B;MAAsD,OAAO,EAAEI,uBAA/D;MAAwF,OAAO,EAAEC;IAAjG;MAAA;MAAA;MAAA;IAAA,QAtBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD,CA5CD;;GAAMV,S;;KAAAA,S;AA8CN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}